# Smoothieboard configuration file, see http://smoothieware.org/configuring-smoothie
# NOTE Lines must not exceed 132 characters, and '#' characters mean what follows is ignored
## Robot module configurations : general handling of movement G-codes and slicing into moves

# Basic motion configuration
default_feed_rate                            4000             # Default speed (mm/minute) for G1/G2/G3 moves
default_seek_rate                            6000             # Default speed (mm/minute) for G0 moves
mm_per_arc_segment                           0.0              # Fixed length for line segments that divide arcs, 0 to disable
#mm_per_line_segment                         5                # Cut lines into segments this size
mm_max_arc_error                             0.01             # The maximum error for line segments that divide arcs 0 to disable
                                                              # note it is invalid for both the above be 0
                                                              # if both are used, will use largest segment length based on radius

# Arm solution configuration : Cartesian robot. Translates mm positions into stepper positions
arm_solution                                corexy
# See http://smoothieware.org/stepper-motors
#
# GT2_Belt : 2mm/tooth
# Pinion : 20T
# -> rotation_distance : 40mm
# Motor 360deg rotate Step count : 200step
# Micro Step : 32
# Motor 360deg rotate total Step count : 6400step
# step count per mm : 6400 / 40 = 160step
alpha_steps_per_mm                           163               # Steps per mm for alpha ( X ) stepper
beta_steps_per_mm                            161               # Steps per mm for beta ( Y ) stepper

# NEMA17 (200PPR) x Microstep (x32) = 6400PPR
# Pinion Diameter (12mm) = 37.6991[mm]
# 6400 / (12 x PI()) = 169.76530795[Pulse]
gamma_steps_per_mm                           169.7653             # Steps per mm for gamma ( Z ) stepper

# Planner module configuration : Look-ahead and acceleration configuration
# See http://smoothieware.org/motion-control
acceleration                                 6000             # Acceleration in mm/second/second.
#z_acceleration                              500              # Acceleration for Z only moves in mm/s^2, 0 uses acceleration which is the default. DO NOT SET ON A DELTA
junction_deviation                           0.05             # See http://smoothieware.org/motion-control#junction-deviation
#z_junction_deviation                        0.0              # For Z only moves, -1 uses junction_deviation, zero disables junction_deviation on z moves DO NOT SET ON A DELTA

# Cartesian axis speed limits
#x_axis_max_speed                             1500000            # mm/min (leed:4mm, electric gear : 65.536, 10um/pulse, 500pulse/rev)
x_axis_max_speed                             3000000            # mm/min (leed:4mm, electric gear : 65.536, 10um/pulse, 500pulse/rev)
y_axis_max_speed                             3000000            # mm/min (leed:10mm, electric gear : 32.768, 10um/pulse, 1000pulse/rev)
z_axis_max_speed                             3000000            # Maximum speed in mm/min

# Stepper module configuration
# Pins are defined as  ports, and pin numbers, appending "!" to the number will invert a pin
# See http://smoothieware.org/pin-configuration and http://smoothieware.org/pinout
alpha_step_pin                               2.0              # Pin for alpha stepper step signal
alpha_dir_pin                                0.5              # Pin for alpha stepper direction, add '!' to reverse direction
alpha_en_pin                                 0.4              # Pin for alpha enable pin
alpha_current                                1.0              # A stepper motor current
alpha_max_rate                               30000.0          # Maximum rate in mm/min

beta_step_pin                                2.1              # Pin for beta stepper step signal
beta_dir_pin                                 0.11             # Pin for beta stepper direction, add '!' to reverse direction
beta_en_pin                                  0.10             # Pin for beta enable
beta_current                                 1.0              # B stepper motor current
beta_max_rate                                30000.0          # Maxmimum rate in mm/min

gamma_step_pin                               2.2              # Pin for gamma stepper step signal
gamma_dir_pin                                0.20             # Pin for gamma stepper direction, add '!' to reverse direction
gamma_en_pin                                 0.19             # Pin for gamma enable
gamma_current                                0.8              # Z stepper motor current
gamma_max_rate                               30000.0            # Maximum rate in mm/min

# A axis
delta_steps_per_mm                           17.77778         # may be steps per degree for example
delta_step_pin                               2.3              # Pin for delta stepper step signal
delta_dir_pin                                0.22             # Pin for delta stepper direction
delta_en_pin                                 0.21             # Pin for delta enable
delta_current                                0.5              # Z stepper motor current
delta_max_rate                              30000.0            # mm/min
delta_acceleration                          50000.0            # mm/sec²

# B axis
epsilon_steps_per_mm                         17.77778         # may be steps per degree for example
epsilon_step_pin                             2.8              # Pin for delta stepper step signal
epsilon_dir_pin                              2.13             # Pin for delta stepper direction
epsilon_en_pin                               4.29             # Pin for delta enable
epsilon_current                              0.5              # Z stepper motor current
epsilon_max_rate                            30000.0            # mm/min
epsilon_acceleration                        50000.0            # mm/sec²


## Laser module configuration
# See http://smoothieware.org/laser
laser_module_enable                           false           # Whether to activate the laser module at all
laser_module_pwm_pin                          2.5             # This pin will be PWMed to control the laser.
                                                              # Only pins 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 1.18, 1.20, 1.21, 1.23, 1.24, 1.26, 3.25 and 3.26
                                                              # can be used since laser requires hardware PWM, see http://smoothieware.org/pinout
#laser_module_ttl_pin 	                      1.30            # This pin turns on when the laser turns on, and off when the laser turns off.
#laser_module_maximum_power                   1.0             # This is the maximum duty cycle that will be applied to the laser
#laser_module_minimum_power                   0.0             # This is a value just below the minimum duty cycle that keeps the laser
                                                              # active without actually burning.
#laser_module_default_power                   0.8             # This is the default laser power that will be used for cuts if a power has not been specified.  The value is a scale between
                                                              # the maximum and minimum power levels specified above
#laser_module_pwm_period                      20              # This sets the pwm frequency as the period in microseconds

## Temperature control configuration
# See http://smoothieware.org/temperaturecontrol

# Nozzle1 (N1) Vacuum Sensing
temperature_control.N1.enable               true
temperature_control.N1.thermistor_pin       0.23
temperature_control.N1.heater_pin           nc
temperature_control.N1.designator           V
temperature_control.N1.min_temp             -10
temperature_control.N1.max_temp             300
temperature_control.N1.thermistor           EPCOS100K
temperature_control.N1.runaway_heating_timeout  0
temperature_control.N1.readings_per_second  320

# Nozzle1 (N2) Vacuum Sensing
temperature_control.N2.enable               true
temperature_control.N2.thermistor_pin       0.24
temperature_control.N2.heater_pin           nc
temperature_control.N2.designator           W
temperature_control.N2.min_temp             -10
temperature_control.N2.max_temp             300
temperature_control.N2.thermistor           EPCOS100K
temperature_control.N2.runaway_heating_timeout  0
temperature_control.N2.readings_per_second  320

# First hotend configuration
#temperature_control.hotend.enable            true             # Whether to activate this ( "hotend" ) module at all.
#temperature_control.hotend.thermistor_pin    0.23             # Pin for the thermistor to read
#temperature_control.hotend.heater_pin        2.7              # Pin that controls the heater, set to nc if a readonly thermistor is being defined
#temperature_control.hotend.thermistor        EPCOS100K        # See http://smoothieware.org/temperaturecontrol#toc5
#temperature_control.hotend.beta             4066             # Or set the beta value
#temperature_control.hotend.set_m_code        104              # M-code to set the temperature for this module
#temperature_control.hotend.set_and_wait_m_code 109            # M-code to set-and-wait for this module
#temperature_control.hotend.designator        T                # Designator letter for this module
#temperature_control.hotend.max_temp         300              # Set maximum temperature - Will prevent heating above 300 by default
#temperature_control.hotend.min_temp         0                # Set minimum temperature - Will prevent heating below if set

# Safety control is enabled by default and can be overidden here, the values show the defaults
# See http://smoothieware.org/temperaturecontrol#runaway
#temperature_control.hotend.runaway_heating_timeout      900  # How long it can take to heat up, max is 2040 seconds.
#temperature_control.hotend.runaway_cooling_timeout        0  # How long it can take to cool down if temp is set lower, max is 2040 seconds
#temperature_control.hotend.runaway_range                20   # How far from the set temperature it can wander, max setting is 63°C

# PID configuration
# See http://smoothieware.org/temperaturecontrol#pid
#temperature_control.hotend.p_factor         13.7             # P ( proportional ) factor
#temperature_control.hotend.i_factor         0.097            # I ( integral ) factor
#temperature_control.hotend.d_factor         24               # D ( derivative ) factor

#temperature_control.hotend.max_pwm          64               # Max pwm, 64 is a good value if driving a 12v resistor with 24v.

# Second hotend configuration
#temperature_control.hotend2.enable            true           # Whether to activate this ( "hotend" ) module at all.
#temperature_control.hotend2.thermistor_pin    0.25           # Pin for the thermistor to read
#temperature_control.hotend2.heater_pin        1.23           # Pin that controls the heater
#temperature_control.hotend2.thermistor        EPCOS100K      # See http://smoothieware.org/temperaturecontrol#thermistor
##temperature_control.hotend2.beta             4066           # or set the beta value
#temperature_control.hotend2.set_m_code        104            # M-code to set the temperature for this module
#temperature_control.hotend2.set_and_wait_m_code 109          # M-code to set-and-wait for this module
#temperature_control.hotend2.designator        T1             # Designator letter for this module

#temperature_control.hotend2.p_factor          13.7           # P ( proportional ) factor
#temperature_control.hotend2.i_factor          0.097          # I ( integral ) factor
#temperature_control.hotend2.d_factor          24             # D ( derivative ) factor

#temperature_control.hotend2.max_pwm          64              # Max pwm, 64 is a good value if driving a 12v resistor with 24v.

#temperature_control.bed.enable               true             # Whether to activate this ( "hotend" ) module at all.
#temperature_control.bed.thermistor_pin       0.24             # Pin for the thermistor to read
#temperature_control.bed.heater_pin           2.5              # Pin that controls the heater
#temperature_control.bed.thermistor           Honeywell100K    # See http://smoothieware.org/temperaturecontrol#thermistor
#temperature_control.bed.beta                3974             # Or set the beta value
#temperature_control.bed.set_m_code           140              # M-code to set the temperature for this module
#temperature_control.bed.set_and_wait_m_code  190              # M-code to set-and-wait for this module
#temperature_control.bed.designator           B                # Designator letter for this module

# Bang-bang ( simplified ) control
# See http://smoothieware.org/temperaturecontrol#bang-bang
#temperature_control.bed.bang_bang           false            # Set to true to use bang bang control rather than PID
#temperature_control.bed.hysteresis          2.0              # Set to the temperature in degrees C to use as hysteresis

## Switch modules

# Switch module for fan control
#switch.fan.enable                            true             # Enable this module
#switch.fan.input_on_command                  M106             # Command that will turn this switch on
#switch.fan.input_off_command                 M107             # Command that will turn this switch off
#switch.fan.output_pin                        2.6              # Pin this module controls
#switch.fan.output_type                       pwm              # PWM output settable with S parameter in the input_on_comand
#switch.fan.max_pwm                          255              # Set max pwm for the pin default is 255

#switch.misc.enable                          true             # Enable this module
#switch.misc.input_on_command                M42              # Command that will turn this switch on
#switch.misc.input_off_command               M43              # Command that will turn this switch off
#switch.misc.output_pin                      2.4              # Pin this module controls
#switch.misc.output_type                     digital          # Digital means this is just an on or off pin

#switch.bltouch.enable                    true         #
#switch.bltouch.output_pin                2.4          # sw pwm can use any digital pin
#switch.bltouch.input_on_command          M280         #
#switch.bltouch.input_off_command         M281         #
#switch.bltouch.output_type               swpwm        # sw pwm must be low frequency
#switch.bltouch.pwm_period_ms             20           # 50Hz
#switch.bltouch.startup_state             false        # start up in the stow state
#switch.bltouch.startup_value             7.43         # On boot it will go into stow mode, also set with the M281
#switch.bltouch.default_on_value          3.3          # if M280 is issued without S this is the value it will set it to

# See http://smoothieware.org/switch
switch.servo.enable                            true             # Enable this module
switch.servo.input_on_command                  M700             # Command that will turn this switch on
switch.servo.input_off_command                 M701             # Command that will turn this switch off
switch.servo.output_pin                        2.11             # Pin this module controls
switch.servo.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.servo.startup_state                     false
switch.servo.failsafe_set_to                   0                # so the servo turns off on a system crash

switch.misc1.enable                            true             # Enable this module
switch.misc1.input_on_command                  M702             # Command that will turn this switch on
switch.misc1.input_off_command                 M703             # Command that will turn this switch off
switch.misc1.output_pin                        3.25             # Pin this module controls
switch.misc1.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc1.startup_state                     false

switch.misc2.enable                            true             # Enable this module
switch.misc2.input_on_command                  M704             # Command that will turn this switch on
switch.misc2.input_off_command                 M705             # Command that will turn this switch off
switch.misc2.output_pin                        3.26             # Pin this module controls
switch.misc2.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc2.startup_state                     false

switch.misc3.enable                            true             # Enable this module
switch.misc3.input_on_command                  M706             # Command that will turn this switch on
switch.misc3.input_off_command                 M707             # Command that will turn this switch off
switch.misc3.output_pin                        2.4              # Pin this module controls
switch.misc3.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc3.startup_state                     false

switch.misc4.enable                            true             # Enable this module
switch.misc4.input_on_command                  M708             # Command that will turn this switch on
switch.misc4.input_off_command                 M709             # Command that will turn this switch off
switch.misc4.output_pin                        2.5              # Pin this module controls
switch.misc4.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc4.startup_state                     false

switch.misc5.enable                            true             # Enable this module
switch.misc5.input_on_command                  M710             # Command that will turn this switch on
switch.misc5.input_off_command                 M711             # Command that will turn this switch off
switch.misc5.output_pin                        2.6              # Pin this module controls
switch.misc5.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc5.startup_state                     false

switch.misc6.enable                            true             # Enable this module
switch.misc6.input_on_command                  M712             # Command that will turn this switch on
switch.misc6.input_off_command                 M713             # Command that will turn this switch off
switch.misc6.output_pin                        2.7              # Pin this module controls
switch.misc6.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc6.startup_state                     false

switch.misc7.enable                            true             # Enable this module
switch.misc7.input_on_command                  M714             # Command that will turn this switch on
switch.misc7.input_off_command                 M715             # Command that will turn this switch off
switch.misc7.output_pin                        1.22             # Pin this module controls
switch.misc7.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc7.startup_state                     false

switch.misc8.enable                            true             # Enable this module
switch.misc8.input_on_command                  M716             # Command that will turn this switch on
switch.misc8.input_off_command                 M717             # Command that will turn this switch off
switch.misc8.output_pin                        1.23              # Pin this module controls
switch.misc8.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc8.startup_state                     false

switch.misc9.enable                            true             # Enable this module
switch.misc9.input_on_command                  M718             # Command that will turn this switch on
switch.misc9.input_off_command                 M719             # Command that will turn this switch off
switch.misc9.output_pin                        1.30              # Pin this module controls
switch.misc9.output_type                       digital          # PWM output settable with S parameter in the input_on_comand
switch.misc9.startup_state                     false

## Input port
switch.vac1read.enable                         true
switch.vac1read.input_pin                      1.29^

switch.vac2read.enable                         true
switch.vac2read.input_pin                      1.25^


## Temperatureswitch
# See http://smoothieware.org/temperatureswitch
# Automatically toggle a switch at a specified temperature. Different ones of these may be defined to monitor different temperatures and switch different swithxes
# Useful to turn on a fan or water pump to cool the hotend
#temperatureswitch.hotend.enable              true            #
#temperatureswitch.hotend.designator          T               # first character of the temperature control designator to use as the temperature sensor to monitor
#temperatureswitch.hotend.switch              misc            # select which switch to use, matches the name of the defined switch
#temperatureswitch.hotend.threshold_temp      60.0            # temperature to turn on (if rising) or off the switch
#temperatureswitch.hotend.heatup_poll         15              # poll heatup at 15 sec intervals
#temperatureswitch.hotend.cooldown_poll       60              # poll cooldown at 60 sec intervals

## Endstops
# See http://smoothieware.org/endstops
endstops_enable                              true             # The endstop module is enabled by default and can be disabled here
corexy_homing                                true            # Set to true if homing on a hbot or corexy
#alpha_min_endstop                            1.24^            # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
alpha_min_endstop                            Nc            # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
alpha_max_endstop                            1.25^            # Pin to read max endstop, uncomment this and comment the above if using max endstops
#alpha_max_endstop                            Nc
alpha_homing_direction                       home_to_max      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
alpha_min                                    0                # This gets loaded as the current position after homing when home_to_min is set
alpha_max                                    700              # This gets loaded as the current position after homing when home_to_max is set
#beta_min_endstop                             1.26^            # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
beta_min_endstop                             Nc            # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
beta_max_endstop                             1.27^            # Pin to read max endstop, uncomment this and comment the above if using max endstops
beta_homing_direction                        home_to_max      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
beta_min                                     0                # This gets loaded as the current position after homing when home_to_min is set
beta_max                                     500              # This gets loaded as the current position after homing when home_to_max is set
gamma_min_endstop                            1.28^            # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
#gamma_max_endstop                           1.29^            # Pin to read max endstop, uncomment this and comment the above if using max endstops
gamma_max_endstop                            Nc
gamma_homing_direction                       home_to_min      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
gamma_min                                    0                # This gets loaded as the current position after homing when home_to_min is set
gamma_max                                    200              # This gets loaded as the current position after homing when home_to_max is set

alpha_max_travel                             750              # Max travel in mm for alpha/X axis when homing
beta_max_travel                              550              # Max travel in mm for beta/Y axis when homing
gamma_max_travel                             500              # Max travel in mm for gamma/Z axis when homing

# Optional enable limit switches, actions will stop if any enabled limit switch is triggered
#alpha_limit_enable                          false            # Set to true to enable X min and max limit switches
#beta_limit_enable                           false            # Set to true to enable Y min and max limit switches
#gamma_limit_enable                          false            # Set to true to enable Z min and max limit switches

# Endstops home at their fast feedrate first, then once the endstop is found they home again at their slow feedrate for accuracy
alpha_fast_homing_rate_mm_s                  50               # Alpha/X fast homing feedrate in mm/second
alpha_slow_homing_rate_mm_s                  5                # Alpha/X slow homing feedrate in mm/second
beta_fast_homing_rate_mm_s                   50               # Beta/Y  fast homing feedrate in mm/second
beta_slow_homing_rate_mm_s                   5                # Beta/Y  slow homing feedrate in mm/second
gamma_fast_homing_rate_mm_s                  20               # Gamma/Z fast homing feedrate in mm/second
gamma_slow_homing_rate_mm_s                  4                # Gamma/Z slow homing feedrate in mm/second

alpha_homing_retract_mm                      3                # Distance to retract from the endstop after it is hit for alpha/X
beta_homing_retract_mm                       3                # Distance to retract from the endstop after it is hit for beta/Y
gamma_homing_retract_mm                      2                # Distance to retract from the endstop after it is hit for gamma/Z

# Optional order in which axis will home, default is they all home at the same time,
# If this is set it will force each axis to home one at a time in the specified order
#homing_order                                 XYZ              # X axis followed by Y then Z last
#move_to_origin_after_home                    false            # Move XY to 0,0 after homing
#endstop_debounce_count                       100              # Uncomment if you get noise on your endstops, default is 100
#endstop_debounce_ms                          1                # Uncomment if you get noise on your endstops, default is 1 millisecond debounce
#home_z_first                                 true             # Uncomment and set to true to home the Z first, otherwise Z homes after XY

# End of endstop config
# Delete the above endstop section and uncomment next line and copy and edit Snippets/abc-endstop.config file to enable endstops for ABC axis
#include abc-endstop.config

## Z-probe
# See http://smoothieware.org/zprobe
zprobe.enable                                false           # Set to true to enable a zprobe
zprobe.probe_pin                             1.28!^          # Pin probe is attached to, if NC remove the !
zprobe.slow_feedrate                         5               # Mm/sec probe feed rate
#zprobe.debounce_ms                          1               # Set if noisy
zprobe.fast_feedrate                         100             # Move feedrate mm/sec
zprobe.probe_height                          5               # How much above bed to start probe
#gamma_min_endstop                           nc              # Normally 1.28. Change to nc to prevent conflict,

# Levelling strategy
# Example for 3-point levelling strategy, see wiki documentation for other strategies
#leveling-strategy.three-point-leveling.enable         true        # a leveling strategy that probes three points to define a plane and keeps the Z parallel to that plane
#leveling-strategy.three-point-leveling.point1         100.0,0.0   # the first probe point (x,y) optional may be defined with M557
#leveling-strategy.three-point-leveling.point2         200.0,200.0 # the second probe point (x,y)
#leveling-strategy.three-point-leveling.point3         0.0,200.0   # the third probe point (x,y)
#leveling-strategy.three-point-leveling.home_first     true        # home the XY axis before probing
#leveling-strategy.three-point-leveling.tolerance      0.03        # the probe tolerance in mm, anything less that this will be ignored, default is 0.03mm
#leveling-strategy.three-point-leveling.probe_offsets  0,0,0       # the probe offsets from nozzle, must be x,y,z, default is no offset
#leveling-strategy.three-point-leveling.save_plane     false       # set to true to allow the bed plane to be saved with M500 default is false

## Panel
# See http://smoothieware.org/panel
# Please find your panel on the wiki and copy/paste the right configuration here
panel.enable                                 false             # Set to true to enable the panel code

# Example for reprap discount GLCD
# on glcd EXP1 is to left and EXP2 is to right, pin 1 is bottom left, pin 2 is top left etc.
# +5v is EXP1 pin 10, Gnd is EXP1 pin 9
#panel.lcd                                   reprap_discount_glcd     #
#panel.spi_channel                           0                 # SPI channel to use  ; GLCD EXP1 Pins 3,5 (MOSI, SCLK)
#panel.spi_cs_pin                            0.16              # SPI chip select     ; GLCD EXP1 Pin 4
#panel.encoder_a_pin                         3.25!^            # Encoder pin         ; GLCD EXP2 Pin 3
#panel.encoder_b_pin                         3.26!^            # Encoder pin         ; GLCD EXP2 Pin 5
#panel.click_button_pin                      1.30!^            # Click button        ; GLCD EXP1 Pin 2
#panel.buzz_pin                              1.31              # Pin for buzzer      ; GLCD EXP1 Pin 1
#panel.back_button_pin                       2.11!^            # Back button         ; GLCD EXP2 Pin 8

panel.menu_offset                            0                 # Some panels will need 1 here

panel.alpha_jog_feedrate                     6000              # X jogging feedrate in mm/min
panel.beta_jog_feedrate                      6000              # Y jogging feedrate in mm/min
panel.gamma_jog_feedrate                     200               # Z jogging feedrate in mm/min

panel.hotend_temperature                     185               # Temp to set hotend when preheat is selected
panel.bed_temperature                        60                # Temp to set bed when preheat is selected

## Custom menus : Example of a custom menu entry, which will show up in the Custom entry.
# NOTE _ gets converted to space in the menu and commands, | is used to separate multiple commands
custom_menu.power_on.enable                true              #
custom_menu.power_on.name                  Power_on          #
custom_menu.power_on.command               M80               #

custom_menu.power_off.enable               true              #
custom_menu.power_off.name                 Power_off         #
custom_menu.power_off.command              M81               #


## Network settings
# See http://smoothieware.org/network
network.enable                               false            # Enable the ethernet network services
network.webserver.enable                     true             # Enable the webserver
network.telnet.enable                        true             # Enable the telnet server
# network.ip_address                           auto             # Use dhcp to get ip address
# Uncomment the 3 below to manually setup ip address
network.ip_address                           192.168.1.180   # The IP address
network.ip_mask                              255.255.255.0   # The ip mask
network.ip_gateway                           192.168.1.5     # The gateway address
#network.mac_override                         xx.xx.xx.xx.xx.xx  # Override the mac address, only do this if you have a conflict

## System configuration
# Serial communications configuration ( baud rate defaults to 9600 if undefined )
# For communication over the UART port, *not* the USB/Serial port
uart0.baud_rate                              115200           # Baud rate for the default hardware ( UART ) serial port

second_usb_serial_enable                     false            # This enables a second USB serial port
#leds_disable                                true             # Disable using leds after config loaded
#play_led_disable                            true             # Disable the play led

# Kill button maybe assigned to a different pin, set to the onboard pin by default
# See http://smoothieware.org/killbutton
kill_button_enable                           true             # Set to true to enable a kill button
kill_button_pin                              2.12             # Kill button pin. default is same as pause button 2.12 (2.11 is another good choice)

#msd_disable                                 false            # Disable the MSD (USB SDCARD), see http://smoothieware.org/troubleshooting#disable-msd
#dfu_enable                                  false            # For linux developers, set to true to enable DFU

# Only needed on a smoothieboard
# See http://smoothieware.org/currentcontrol
currentcontrol_module_enable                 true             # Control stepper motor current via the configuration file